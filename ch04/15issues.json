{
  "total_count": 15,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/golang/go/issues/18227",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/18227/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/18227/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/18227/events",
      "html_url": "https://github.com/golang/go/issues/18227",
      "id": 194008199,
      "number": 18227,
      "title": "encoding/json: Decoder does not keep context for nested UnmarshalJSON errors",
      "user": {
        "login": "LeGEC",
        "id": 795408,
        "avatar_url": "https://avatars.githubusercontent.com/u/795408?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LeGEC",
        "html_url": "https://github.com/LeGEC",
        "followers_url": "https://api.github.com/users/LeGEC/followers",
        "following_url": "https://api.github.com/users/LeGEC/following{/other_user}",
        "gists_url": "https://api.github.com/users/LeGEC/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/LeGEC/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LeGEC/subscriptions",
        "organizations_url": "https://api.github.com/users/LeGEC/orgs",
        "repos_url": "https://api.github.com/users/LeGEC/repos",
        "events_url": "https://api.github.com/users/LeGEC/events{/privacy}",
        "received_events_url": "https://api.github.com/users/LeGEC/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/49",
        "html_url": "https://github.com/golang/go/milestone/49",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/49/labels",
        "id": 2053058,
        "number": 49,
        "title": "Go1.9",
        "description": "",
        "creator": {
          "login": "rsc",
          "id": 104030,
          "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rsc",
          "html_url": "https://github.com/rsc",
          "followers_url": "https://api.github.com/users/rsc/followers",
          "following_url": "https://api.github.com/users/rsc/following{/other_user}",
          "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
          "organizations_url": "https://api.github.com/users/rsc/orgs",
          "repos_url": "https://api.github.com/users/rsc/repos",
          "events_url": "https://api.github.com/users/rsc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rsc/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 394,
        "closed_issues": 40,
        "state": "open",
        "created_at": "2016-10-06T18:17:55Z",
        "updated_at": "2017-01-07T23:55:40Z",
        "due_on": "2017-07-31T07:00:00Z",
        "closed_at": null
      },
      "comments": 3,
      "created_at": "2016-12-07T10:11:38Z",
      "updated_at": "2016-12-08T16:19:49Z",
      "closed_at": null,
      "body": "### What version of Go are you using (`go version`)?\r\n### What operating system and processor architecture are you using (`go env`)?\r\n\r\nplayground  :  go1.7  amd64p32 - nacl\r\n\r\n### What did you do?\r\n\r\nI triggered a json error :\r\nthe error is raised by a specific UnmarshalJSON() function on one of the fields of the go struct value\r\n\r\nIn this specific example : a time.Time field tries to parse the string \"null\"\r\n\r\nhttps://play.golang.org/p/SH1R641VzV\r\n\r\n### What did you expect to see?\r\n\r\nsome error wrapped into a `json.SomeErrorType` value.\r\nmaybe a new `json.UnmarshalValueError` :\r\n\r\n`json.UnmarshalValueError{Offset: 24, Fieldname: \"Clock\", Suberror: time.ParseError{ ... } ...`\r\n\r\n(some way to get the context of where the error occurred)\r\n\r\n### What did you see instead?\r\n\r\nthe raw error value from the time package :\r\n\r\n`&time.ParseError{Layout:\"\\\"2006-01-02T15:04:05Z07:00\\\"\", Value:\"null\", LayoutElem:\"\\\"\", ValueElem:\"null\", Message:\"\"}`\r\n\r\n\r\n#### additional notes\r\n\r\nSince using this as the default behaviour would break the backward compatibility promise, maybe add a switch on the `json.Decoder()` type :\r\n\r\n     func (dec *Decoder) UseDetailedUnmarshalErrors(v bool) {\r\n         ...\r\n    }\r\n\r\nThis would not fix the direct use of `json.Unmarshal()` function, but would still give a way to get this error context.",
      "score": 9.951592
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/11046",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/11046/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/11046/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/11046/events",
      "html_url": "https://github.com/golang/go/issues/11046",
      "id": 84732835,
      "number": 11046,
      "title": "encoding/json: Decoder internally buffers full input",
      "user": {
        "login": "kurin",
        "id": 90267,
        "avatar_url": "https://avatars.githubusercontent.com/u/90267?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kurin",
        "html_url": "https://github.com/kurin",
        "followers_url": "https://api.github.com/users/kurin/followers",
        "following_url": "https://api.github.com/users/kurin/following{/other_user}",
        "gists_url": "https://api.github.com/users/kurin/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kurin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kurin/subscriptions",
        "organizations_url": "https://api.github.com/users/kurin/orgs",
        "repos_url": "https://api.github.com/users/kurin/repos",
        "events_url": "https://api.github.com/users/kurin/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kurin/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 150880191,
          "url": "https://api.github.com/repos/golang/go/labels/Performance",
          "name": "Performance",
          "color": "ededed",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/6",
        "html_url": "https://github.com/golang/go/milestone/6",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/6/labels",
        "id": 1055141,
        "number": 6,
        "title": "Unplanned",
        "description": "No plan to fix in any specific release.\r\n",
        "creator": {
          "login": "rsc",
          "id": 104030,
          "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rsc",
          "html_url": "https://github.com/rsc",
          "followers_url": "https://api.github.com/users/rsc/followers",
          "following_url": "https://api.github.com/users/rsc/following{/other_user}",
          "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
          "organizations_url": "https://api.github.com/users/rsc/orgs",
          "repos_url": "https://api.github.com/users/rsc/repos",
          "events_url": "https://api.github.com/users/rsc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rsc/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 1199,
        "closed_issues": 620,
        "state": "open",
        "created_at": "2015-04-06T20:47:19Z",
        "updated_at": "2017-01-08T16:18:58Z",
        "due_on": "2099-12-31T08:00:00Z",
        "closed_at": null
      },
      "comments": 7,
      "created_at": "2015-06-03T19:25:08Z",
      "updated_at": "2016-04-14T02:19:34Z",
      "closed_at": null,
      "body": "When using the JSON package, if I encode a struct like\n\n``` go\ntype Data struct {\n    Count int\n    Names []string\n}\n```\n\nand then decode it into\n\n``` go\ntype SmallData struct {\n    Count int\n}\n```\n\nit will still allocate memory for the list of names, even though it just gets thrown away.  This becomes an annoyance when I have several multigigabyte JSON files like this.  It would be neat if the JSON parser could identify what fields it cares about, or somehow be told what fields to ignore, and chuck them.\n",
      "score": 9.3837
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/15314",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/15314/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/15314/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/15314/events",
      "html_url": "https://github.com/golang/go/issues/15314",
      "id": 148556861,
      "number": 15314,
      "title": "proposal: some way to reject unknown fields in encoding/json.Decoder",
      "user": {
        "login": "okdave",
        "id": 1091335,
        "avatar_url": "https://avatars.githubusercontent.com/u/1091335?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/okdave",
        "html_url": "https://github.com/okdave",
        "followers_url": "https://api.github.com/users/okdave/followers",
        "following_url": "https://api.github.com/users/okdave/following{/other_user}",
        "gists_url": "https://api.github.com/users/okdave/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/okdave/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/okdave/subscriptions",
        "organizations_url": "https://api.github.com/users/okdave/orgs",
        "repos_url": "https://api.github.com/users/okdave/repos",
        "events_url": "https://api.github.com/users/okdave/events{/privacy}",
        "received_events_url": "https://api.github.com/users/okdave/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 246350233,
          "url": "https://api.github.com/repos/golang/go/labels/Proposal-Accepted",
          "name": "Proposal-Accepted",
          "color": "009800",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/47",
        "html_url": "https://github.com/golang/go/milestone/47",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/47/labels",
        "id": 2038341,
        "number": 47,
        "title": "Go1.9Early",
        "description": "",
        "creator": {
          "login": "quentinmit",
          "id": 115761,
          "avatar_url": "https://avatars.githubusercontent.com/u/115761?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/quentinmit",
          "html_url": "https://github.com/quentinmit",
          "followers_url": "https://api.github.com/users/quentinmit/followers",
          "following_url": "https://api.github.com/users/quentinmit/following{/other_user}",
          "gists_url": "https://api.github.com/users/quentinmit/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/quentinmit/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/quentinmit/subscriptions",
          "organizations_url": "https://api.github.com/users/quentinmit/orgs",
          "repos_url": "https://api.github.com/users/quentinmit/repos",
          "events_url": "https://api.github.com/users/quentinmit/events{/privacy}",
          "received_events_url": "https://api.github.com/users/quentinmit/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 122,
        "closed_issues": 3,
        "state": "open",
        "created_at": "2016-09-29T18:06:31Z",
        "updated_at": "2017-01-06T22:26:39Z",
        "due_on": "2017-04-30T07:00:00Z",
        "closed_at": null
      },
      "comments": 31,
      "created_at": "2016-04-15T05:19:15Z",
      "updated_at": "2016-12-27T20:21:15Z",
      "closed_at": null,
      "body": "Currently, json.Unmarshal (and json.Decoder.Decode) ignore fields in the incoming JSON which are absent in a target struct.\n\nFor example, the JSON `{ \"A\": true, \"B\": 123 }` will successfully unmarshal into `struct { A bool }`.\n\nThis makes it difficult to do strict JSON parsing. One place this is an issue is in API creation, since you want to reject unknown fields on incoming JSON requests to allow safe introduction of new fields in the future (I've had this use case previously when working on a JSON REST API). It also can lead to typos leading to bugs in production: when a field is almost always the zero value in incoming JSON, you might not realise you're not even reading a misspelled field.\n\nI propose that a new method is added to `Decoder` to turn on this stricter parsing, in much the same way `UseNumber` is used today. When in strict parsing mode, a key in the incoming JSON which cannot be applied to a struct will result in an `MissingFieldError` error. Like `UnmarshalTypeError`, decoding would continue for the remaining incoming data.\n\n```\nd := json.NewDecoder(r.Body)\nd.UseStrictFields()\nerr := d.Decode(myStruct)\n```\n",
      "score": 8.651185
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/5680",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/5680/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/5680/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/5680/events",
      "html_url": "https://github.com/golang/go/issues/5680",
      "id": 51284018,
      "number": 5680,
      "title": "encoding/json: set key converter on en/decoder",
      "user": {
        "login": "eaigner",
        "id": 112197,
        "avatar_url": "https://avatars.githubusercontent.com/u/112197?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eaigner",
        "html_url": "https://github.com/eaigner",
        "followers_url": "https://api.github.com/users/eaigner/followers",
        "following_url": "https://api.github.com/users/eaigner/following{/other_user}",
        "gists_url": "https://api.github.com/users/eaigner/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eaigner/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eaigner/subscriptions",
        "organizations_url": "https://api.github.com/users/eaigner/orgs",
        "repos_url": "https://api.github.com/users/eaigner/repos",
        "events_url": "https://api.github.com/users/eaigner/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eaigner/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/6",
        "html_url": "https://github.com/golang/go/milestone/6",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/6/labels",
        "id": 1055141,
        "number": 6,
        "title": "Unplanned",
        "description": "No plan to fix in any specific release.\r\n",
        "creator": {
          "login": "rsc",
          "id": 104030,
          "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rsc",
          "html_url": "https://github.com/rsc",
          "followers_url": "https://api.github.com/users/rsc/followers",
          "following_url": "https://api.github.com/users/rsc/following{/other_user}",
          "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
          "organizations_url": "https://api.github.com/users/rsc/orgs",
          "repos_url": "https://api.github.com/users/rsc/repos",
          "events_url": "https://api.github.com/users/rsc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rsc/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 1199,
        "closed_issues": 620,
        "state": "open",
        "created_at": "2015-04-06T20:47:19Z",
        "updated_at": "2017-01-08T16:18:58Z",
        "due_on": "2099-12-31T08:00:00Z",
        "closed_at": null
      },
      "comments": 6,
      "created_at": "2013-06-11T16:23:53Z",
      "updated_at": "2015-04-14T19:45:19Z",
      "closed_at": null,
      "body": "<pre>Instead of having to specify `json:&quot;lowercase_field&quot;` or similar on every\nstruct field, the JSON en/decoder could have a\n\n    SetKeyConverter(c KeyConverter)\n\nmethod. The KeyConverter would be responsible for converting struct/map keys to JSON\nkeys and vice versa.\n\n    type KeyConverter interface {\n        EncodeKey(key string) string\n        DecodeKey(key string) string\n    }\n\nThis would be much less intrusive into type declarations, and generating a different\nJSON output would simply be a matter of using another KeyConverter instead of a whole\nnew struct.</pre>\n",
      "score": 7.4397726
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/5901",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/5901/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/5901/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/5901/events",
      "html_url": "https://github.com/golang/go/issues/5901",
      "id": 51284360,
      "number": 5901,
      "title": "encoding/json: allow override type marshaling",
      "user": {
        "login": "rsc",
        "id": 104030,
        "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rsc",
        "html_url": "https://github.com/rsc",
        "followers_url": "https://api.github.com/users/rsc/followers",
        "following_url": "https://api.github.com/users/rsc/following{/other_user}",
        "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
        "organizations_url": "https://api.github.com/users/rsc/orgs",
        "repos_url": "https://api.github.com/users/rsc/repos",
        "events_url": "https://api.github.com/users/rsc/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rsc/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/6",
        "html_url": "https://github.com/golang/go/milestone/6",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/6/labels",
        "id": 1055141,
        "number": 6,
        "title": "Unplanned",
        "description": "No plan to fix in any specific release.\r\n",
        "creator": {
          "login": "rsc",
          "id": 104030,
          "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rsc",
          "html_url": "https://github.com/rsc",
          "followers_url": "https://api.github.com/users/rsc/followers",
          "following_url": "https://api.github.com/users/rsc/following{/other_user}",
          "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
          "organizations_url": "https://api.github.com/users/rsc/orgs",
          "repos_url": "https://api.github.com/users/rsc/repos",
          "events_url": "https://api.github.com/users/rsc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rsc/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 1199,
        "closed_issues": 620,
        "state": "open",
        "created_at": "2015-04-06T20:47:19Z",
        "updated_at": "2017-01-08T16:18:58Z",
        "due_on": "2099-12-31T08:00:00Z",
        "closed_at": null
      },
      "comments": 5,
      "created_at": "2013-07-17T16:39:15Z",
      "updated_at": "2017-01-02T22:28:28Z",
      "closed_at": null,
      "body": "<pre>For example, if a user wants to marshal net.IP with custom code, we should provide a way\nto do that, probably a method on *Encoder. Similarly for *Decoder.\n\nSame for encoding/xml.</pre>\n",
      "score": 5.1260476
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/18086",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/18086/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/18086/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/18086/events",
      "html_url": "https://github.com/golang/go/issues/18086",
      "id": 192136830,
      "number": 18086,
      "title": "encoding/json: export func Valid([]byte) bool",
      "user": {
        "login": "sj26",
        "id": 14028,
        "avatar_url": "https://avatars.githubusercontent.com/u/14028?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sj26",
        "html_url": "https://github.com/sj26",
        "followers_url": "https://api.github.com/users/sj26/followers",
        "following_url": "https://api.github.com/users/sj26/following{/other_user}",
        "gists_url": "https://api.github.com/users/sj26/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sj26/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sj26/subscriptions",
        "organizations_url": "https://api.github.com/users/sj26/orgs",
        "repos_url": "https://api.github.com/users/sj26/repos",
        "events_url": "https://api.github.com/users/sj26/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sj26/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 150880243,
          "url": "https://api.github.com/repos/golang/go/labels/HelpWanted",
          "name": "HelpWanted",
          "color": "fbca04",
          "default": false
        },
        {
          "id": 246350233,
          "url": "https://api.github.com/repos/golang/go/labels/Proposal-Accepted",
          "name": "Proposal-Accepted",
          "color": "009800",
          "default": false
        },
        {
          "id": 150880161,
          "url": "https://api.github.com/repos/golang/go/labels/Suggested",
          "name": "Suggested",
          "color": "ddffdd",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/49",
        "html_url": "https://github.com/golang/go/milestone/49",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/49/labels",
        "id": 2053058,
        "number": 49,
        "title": "Go1.9",
        "description": "",
        "creator": {
          "login": "rsc",
          "id": 104030,
          "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rsc",
          "html_url": "https://github.com/rsc",
          "followers_url": "https://api.github.com/users/rsc/followers",
          "following_url": "https://api.github.com/users/rsc/following{/other_user}",
          "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
          "organizations_url": "https://api.github.com/users/rsc/orgs",
          "repos_url": "https://api.github.com/users/rsc/repos",
          "events_url": "https://api.github.com/users/rsc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rsc/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 394,
        "closed_issues": 40,
        "state": "open",
        "created_at": "2016-10-06T18:17:55Z",
        "updated_at": "2017-01-07T23:55:40Z",
        "due_on": "2017-07-31T07:00:00Z",
        "closed_at": null
      },
      "comments": 4,
      "created_at": "2016-11-28T22:38:51Z",
      "updated_at": "2016-12-13T23:00:22Z",
      "closed_at": null,
      "body": "I'm running go version go1.7.1 darwin/amd64 on macOS 10.12.1.\r\n\r\nI'm trying to validate some a byte array is valid JSON so it can be marshalled literally like [RawMessage](https://golang.org/pkg/encoding/json/#RawMessage). The only way to do this at the moment is to create a [Decoder](https://golang.org/pkg/encoding/json/#Decoder) and fully decode the bytes causing many useless allocations, or write a custom scanner.\r\n\r\nBut there's a lovely, allocation-free function for scanning a byte array to see if it's valid JSON tucked away inside the encoding/json package ([checkValid](https://github.com/golang/go/blob/f7c351bdf6c8a70c90aac132194a9df390d002e0/src/encoding/json/scanner.go#L18-L32)), and used in several places within the package. It'd be great to expose this for general use as something like [`IsValid(data []byte) bool`](https://github.com/golang/go/commit/c746aaefb7e3d9b0c2c13efaa2a8945da491e4ae).\r\n\r\nI proposed [this change](https://go-review.googlesource.com/#/c/29494/) a while back but I didn't understand the contribution process sorry! Is this the right place to file the issue @bradfitz?",
      "score": 4.7228584
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/8658",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/8658/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/8658/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/8658/events",
      "html_url": "https://github.com/golang/go/issues/8658",
      "id": 51288515,
      "number": 8658,
      "title": "encoding/json: use bufio",
      "user": {
        "login": "gopherbot",
        "id": 8566911,
        "avatar_url": "https://avatars.githubusercontent.com/u/8566911?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gopherbot",
        "html_url": "https://github.com/gopherbot",
        "followers_url": "https://api.github.com/users/gopherbot/followers",
        "following_url": "https://api.github.com/users/gopherbot/following{/other_user}",
        "gists_url": "https://api.github.com/users/gopherbot/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gopherbot/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gopherbot/subscriptions",
        "organizations_url": "https://api.github.com/users/gopherbot/orgs",
        "repos_url": "https://api.github.com/users/gopherbot/repos",
        "events_url": "https://api.github.com/users/gopherbot/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gopherbot/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 150880249,
          "url": "https://api.github.com/repos/golang/go/labels/Go2",
          "name": "Go2",
          "color": "ffaaaa",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/6",
        "html_url": "https://github.com/golang/go/milestone/6",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/6/labels",
        "id": 1055141,
        "number": 6,
        "title": "Unplanned",
        "description": "No plan to fix in any specific release.\r\n",
        "creator": {
          "login": "rsc",
          "id": 104030,
          "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rsc",
          "html_url": "https://github.com/rsc",
          "followers_url": "https://api.github.com/users/rsc/followers",
          "following_url": "https://api.github.com/users/rsc/following{/other_user}",
          "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
          "organizations_url": "https://api.github.com/users/rsc/orgs",
          "repos_url": "https://api.github.com/users/rsc/repos",
          "events_url": "https://api.github.com/users/rsc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rsc/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 1199,
        "closed_issues": 620,
        "state": "open",
        "created_at": "2015-04-06T20:47:19Z",
        "updated_at": "2017-01-08T16:18:58Z",
        "due_on": "2099-12-31T08:00:00Z",
        "closed_at": null
      },
      "comments": 1,
      "created_at": "2014-09-04T20:00:43Z",
      "updated_at": "2015-04-14T19:45:24Z",
      "closed_at": null,
      "body": "<pre><a href=\"http://golang.org/pkg/encoding/json/#Decoder.Buffered\">http://golang.org/pkg/encoding/json/#Decoder.Buffered</a> is quite painful to use, if your\nprotocol e.g. alternates between other things and json. It would be nice if one could\npass a bufio.Reader to NewDecoder, and be able to share the bufio buffering between\ncalls to Decode, and other protocol logic.\n\nI don't expect this to change quickly. But perhaps it could use bufio right, without\nbreaking the Decoder.Buffered guarantee for Go1?\n\nAt least, once you do break Go1 promises, please change this.</pre>\n",
      "score": 4.0408983
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/16212",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/16212/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/16212/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/16212/events",
      "html_url": "https://github.com/golang/go/issues/16212",
      "id": 162965572,
      "number": 16212,
      "title": "encoding/json: do all reflect work before decoding",
      "user": {
        "login": "josharian",
        "id": 67496,
        "avatar_url": "https://avatars.githubusercontent.com/u/67496?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josharian",
        "html_url": "https://github.com/josharian",
        "followers_url": "https://api.github.com/users/josharian/followers",
        "following_url": "https://api.github.com/users/josharian/following{/other_user}",
        "gists_url": "https://api.github.com/users/josharian/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/josharian/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/josharian/subscriptions",
        "organizations_url": "https://api.github.com/users/josharian/orgs",
        "repos_url": "https://api.github.com/users/josharian/repos",
        "events_url": "https://api.github.com/users/josharian/events{/privacy}",
        "received_events_url": "https://api.github.com/users/josharian/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 373399998,
          "url": "https://api.github.com/repos/golang/go/labels/NeedsFix",
          "name": "NeedsFix",
          "color": "ededed",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/6",
        "html_url": "https://github.com/golang/go/milestone/6",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/6/labels",
        "id": 1055141,
        "number": 6,
        "title": "Unplanned",
        "description": "No plan to fix in any specific release.\r\n",
        "creator": {
          "login": "rsc",
          "id": 104030,
          "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rsc",
          "html_url": "https://github.com/rsc",
          "followers_url": "https://api.github.com/users/rsc/followers",
          "following_url": "https://api.github.com/users/rsc/following{/other_user}",
          "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
          "organizations_url": "https://api.github.com/users/rsc/orgs",
          "repos_url": "https://api.github.com/users/rsc/repos",
          "events_url": "https://api.github.com/users/rsc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rsc/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 1199,
        "closed_issues": 620,
        "state": "open",
        "created_at": "2015-04-06T20:47:19Z",
        "updated_at": "2017-01-08T16:18:58Z",
        "due_on": "2099-12-31T08:00:00Z",
        "closed_at": null
      },
      "comments": 2,
      "created_at": "2016-06-29T16:07:36Z",
      "updated_at": "2016-10-20T18:49:35Z",
      "closed_at": null,
      "body": "@crawshaw commented in [CL 24472](https://go-review.googlesource.com/#/c/24472/):\n\n> With more time and care, I believe more of the JSON decoder's work could be shifted so it is done before decoding, and independent of the number of bytes processed. Maybe someone could explore that for Go 1.8.\n\nThis issue is a reminder, because CLs get forgotten.\n",
      "score": 3.6486344
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/12001",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/12001/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/12001/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/12001/events",
      "html_url": "https://github.com/golang/go/issues/12001",
      "id": 98819362,
      "number": 12001,
      "title": "encoding/json: Marshaler/Unmarshaler not stream friendly",
      "user": {
        "login": "lukescott",
        "id": 486224,
        "avatar_url": "https://avatars.githubusercontent.com/u/486224?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lukescott",
        "html_url": "https://github.com/lukescott",
        "followers_url": "https://api.github.com/users/lukescott/followers",
        "following_url": "https://api.github.com/users/lukescott/following{/other_user}",
        "gists_url": "https://api.github.com/users/lukescott/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lukescott/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lukescott/subscriptions",
        "organizations_url": "https://api.github.com/users/lukescott/orgs",
        "repos_url": "https://api.github.com/users/lukescott/repos",
        "events_url": "https://api.github.com/users/lukescott/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lukescott/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/6",
        "html_url": "https://github.com/golang/go/milestone/6",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/6/labels",
        "id": 1055141,
        "number": 6,
        "title": "Unplanned",
        "description": "No plan to fix in any specific release.\r\n",
        "creator": {
          "login": "rsc",
          "id": 104030,
          "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rsc",
          "html_url": "https://github.com/rsc",
          "followers_url": "https://api.github.com/users/rsc/followers",
          "following_url": "https://api.github.com/users/rsc/following{/other_user}",
          "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
          "organizations_url": "https://api.github.com/users/rsc/orgs",
          "repos_url": "https://api.github.com/users/rsc/repos",
          "events_url": "https://api.github.com/users/rsc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rsc/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 1199,
        "closed_issues": 620,
        "state": "open",
        "created_at": "2015-04-06T20:47:19Z",
        "updated_at": "2017-01-08T16:18:58Z",
        "due_on": "2099-12-31T08:00:00Z",
        "closed_at": null
      },
      "comments": 1,
      "created_at": "2015-08-03T19:14:17Z",
      "updated_at": "2015-10-30T13:08:02Z",
      "closed_at": null,
      "body": "The Marshaler/Unmarshaler interface deals with whole []byte slices:\n\n``` go\ntype Marshaler interface {\n        MarshalJSON() ([]byte, error)\n}\ntype Unmarshaler interface {\n        UnmarshalJSON([]byte) error\n}\n```\n\nIf you're dealing with a type that encodes to an array that has a large number of objects inside you have to encode all of into a single []byte.\n\nThe encoding/xml package is, unlike encoding/json, stream friendly:\n\n``` go\ntype Marshaler interface {\n        MarshalXML(e *Encoder, start StartElement) error\n}\ntype Unmarshaler interface {\n        UnmarshalXML(d *Decoder, start StartElement) error\n}\n```\n\nWith MarshalXML you can call e.Encode/e.EncodeElement/e.EncodeToken.\n\nSince encoding/json is gaining Token()/EncodeToken() methods it would be really helpful to have a Marshaler/Unmarshaler interface that can take advantage of that. Perhaps something along the lines of:\n\n``` go\ntype Encoder interface {\n        EncodeJSON(e *Encoder) error\n}\ntype Decoder interface {\n        DecodeJSON(d *Decoder) error\n}\n```\n\nSince Marshaler/Unmarshaler can't be changed. Or something like:\n\n``` go\ntype Marshaler2 interface {\n        MarshalJSON(e *Encoder) error\n}\ntype Unmarshaler2 interface {\n        UnmarshalJSON(d *Decoder) error\n}\n```\n",
      "score": 3.5235412
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/17609",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/17609/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/17609/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/17609/events",
      "html_url": "https://github.com/golang/go/issues/17609",
      "id": 185439260,
      "number": 17609,
      "title": "encoding/json: ambiguous fields are marshalled",
      "user": {
        "login": "nathanjsweet",
        "id": 447792,
        "avatar_url": "https://avatars.githubusercontent.com/u/447792?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nathanjsweet",
        "html_url": "https://github.com/nathanjsweet",
        "followers_url": "https://api.github.com/users/nathanjsweet/followers",
        "following_url": "https://api.github.com/users/nathanjsweet/following{/other_user}",
        "gists_url": "https://api.github.com/users/nathanjsweet/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nathanjsweet/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nathanjsweet/subscriptions",
        "organizations_url": "https://api.github.com/users/nathanjsweet/orgs",
        "repos_url": "https://api.github.com/users/nathanjsweet/repos",
        "events_url": "https://api.github.com/users/nathanjsweet/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nathanjsweet/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 373401956,
          "url": "https://api.github.com/repos/golang/go/labels/NeedsDecision",
          "name": "NeedsDecision",
          "color": "ededed",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/49",
        "html_url": "https://github.com/golang/go/milestone/49",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/49/labels",
        "id": 2053058,
        "number": 49,
        "title": "Go1.9",
        "description": "",
        "creator": {
          "login": "rsc",
          "id": 104030,
          "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rsc",
          "html_url": "https://github.com/rsc",
          "followers_url": "https://api.github.com/users/rsc/followers",
          "following_url": "https://api.github.com/users/rsc/following{/other_user}",
          "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
          "organizations_url": "https://api.github.com/users/rsc/orgs",
          "repos_url": "https://api.github.com/users/rsc/repos",
          "events_url": "https://api.github.com/users/rsc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rsc/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 394,
        "closed_issues": 40,
        "state": "open",
        "created_at": "2016-10-06T18:17:55Z",
        "updated_at": "2017-01-07T23:55:40Z",
        "due_on": "2017-07-31T07:00:00Z",
        "closed_at": null
      },
      "comments": 8,
      "created_at": "2016-10-26T16:07:27Z",
      "updated_at": "2016-11-03T19:20:58Z",
      "closed_at": null,
      "body": "Embedded fields work, even when there are selectors that are the same:\nex: https://play.golang.org/p/fJTGL-HWEk\nYou get a compile time error though when you select ambiguously:\nex: https://play.golang.org/p/McjVYbnAhT\nI understand that it would be hard to achieve, but I expect a compile time error from the following code, but I don't get one:\nhttps://play.golang.org/p/2oOXH2uzWy\n\nI understand that others might rely on this inconsistency now, but if a compile time error is achievable (I understand that this would be difficult), it will be the least offensive fix possible. \n",
      "score": 3.4603322
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/7872",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/7872/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/7872/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/7872/events",
      "html_url": "https://github.com/golang/go/issues/7872",
      "id": 51287338,
      "number": 7872,
      "title": "encoding/json: Encoder internally buffers full output",
      "user": {
        "login": "extemporalgenome",
        "id": 536740,
        "avatar_url": "https://avatars.githubusercontent.com/u/536740?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/extemporalgenome",
        "html_url": "https://github.com/extemporalgenome",
        "followers_url": "https://api.github.com/users/extemporalgenome/followers",
        "following_url": "https://api.github.com/users/extemporalgenome/following{/other_user}",
        "gists_url": "https://api.github.com/users/extemporalgenome/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/extemporalgenome/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/extemporalgenome/subscriptions",
        "organizations_url": "https://api.github.com/users/extemporalgenome/orgs",
        "repos_url": "https://api.github.com/users/extemporalgenome/repos",
        "events_url": "https://api.github.com/users/extemporalgenome/events{/privacy}",
        "received_events_url": "https://api.github.com/users/extemporalgenome/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 373399998,
          "url": "https://api.github.com/repos/golang/go/labels/NeedsFix",
          "name": "NeedsFix",
          "color": "ededed",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/49",
        "html_url": "https://github.com/golang/go/milestone/49",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/49/labels",
        "id": 2053058,
        "number": 49,
        "title": "Go1.9",
        "description": "",
        "creator": {
          "login": "rsc",
          "id": 104030,
          "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rsc",
          "html_url": "https://github.com/rsc",
          "followers_url": "https://api.github.com/users/rsc/followers",
          "following_url": "https://api.github.com/users/rsc/following{/other_user}",
          "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
          "organizations_url": "https://api.github.com/users/rsc/orgs",
          "repos_url": "https://api.github.com/users/rsc/repos",
          "events_url": "https://api.github.com/users/rsc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rsc/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 394,
        "closed_issues": 40,
        "state": "open",
        "created_at": "2016-10-06T18:17:55Z",
        "updated_at": "2017-01-07T23:55:40Z",
        "due_on": "2017-07-31T07:00:00Z",
        "closed_at": null
      },
      "comments": 10,
      "created_at": "2014-04-26T17:47:25Z",
      "updated_at": "2016-10-26T16:23:12Z",
      "closed_at": null,
      "body": "<pre>What does 'go version' print?\n\ngo version devel +2f6b9f80be36 Fri Apr 25 09:46:07 2014 -0600 linux/amd64\n\nWhat steps reproduce the problem?\nIf possible, include a link to a program on play.golang.org.\n\n1. Use json.NewEncoder(writer).Encode(value)\n\nWhat happened?\n\nEach call to json.Encoder.Encode uses an internal bytes.Buffer to buffer all encoded\noutput prior to writing any of that output.\n\nWhat should have happened instead?\n\nOutput should use little or no internal buffering. Encoder should be able to efficiently\nencode (and incrementally output) very large inputs.</pre>\n",
      "score": 3.2051091
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/14750",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/14750/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/14750/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/14750/events",
      "html_url": "https://github.com/golang/go/issues/14750",
      "id": 139880053,
      "number": 14750,
      "title": "encoding/json: parser ignores the case of member names",
      "user": {
        "login": "cyberphone",
        "id": 8044211,
        "avatar_url": "https://avatars.githubusercontent.com/u/8044211?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cyberphone",
        "html_url": "https://github.com/cyberphone",
        "followers_url": "https://api.github.com/users/cyberphone/followers",
        "following_url": "https://api.github.com/users/cyberphone/following{/other_user}",
        "gists_url": "https://api.github.com/users/cyberphone/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/cyberphone/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/cyberphone/subscriptions",
        "organizations_url": "https://api.github.com/users/cyberphone/orgs",
        "repos_url": "https://api.github.com/users/cyberphone/repos",
        "events_url": "https://api.github.com/users/cyberphone/events{/privacy}",
        "received_events_url": "https://api.github.com/users/cyberphone/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 373401956,
          "url": "https://api.github.com/repos/golang/go/labels/NeedsDecision",
          "name": "NeedsDecision",
          "color": "ededed",
          "default": false
        },
        {
          "id": 150880219,
          "url": "https://api.github.com/repos/golang/go/labels/Security",
          "name": "Security",
          "color": "ededed",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/47",
        "html_url": "https://github.com/golang/go/milestone/47",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/47/labels",
        "id": 2038341,
        "number": 47,
        "title": "Go1.9Early",
        "description": "",
        "creator": {
          "login": "quentinmit",
          "id": 115761,
          "avatar_url": "https://avatars.githubusercontent.com/u/115761?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/quentinmit",
          "html_url": "https://github.com/quentinmit",
          "followers_url": "https://api.github.com/users/quentinmit/followers",
          "following_url": "https://api.github.com/users/quentinmit/following{/other_user}",
          "gists_url": "https://api.github.com/users/quentinmit/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/quentinmit/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/quentinmit/subscriptions",
          "organizations_url": "https://api.github.com/users/quentinmit/orgs",
          "repos_url": "https://api.github.com/users/quentinmit/repos",
          "events_url": "https://api.github.com/users/quentinmit/events{/privacy}",
          "received_events_url": "https://api.github.com/users/quentinmit/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 122,
        "closed_issues": 3,
        "state": "open",
        "created_at": "2016-09-29T18:06:31Z",
        "updated_at": "2017-01-06T22:26:39Z",
        "due_on": "2017-04-30T07:00:00Z",
        "closed_at": null
      },
      "comments": 9,
      "created_at": "2016-03-10T13:04:44Z",
      "updated_at": "2016-10-26T16:48:20Z",
      "closed_at": null,
      "body": "1. What version of Go are you using? `5.3`\n2. What operating system and processor architecture are you using? `amd64,windows`\n3. What did you do?\n   Read this: https://mailarchive.ietf.org/arch/msg/json/Ju-bwuRv-bq9IuOGzwqlV3aU9XE\n4. What did you expect to see?\n   ...\n5. What did you see instead?\n   ...\n",
      "score": 2.696799
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/6647",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/6647/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/6647/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/6647/events",
      "html_url": "https://github.com/golang/go/issues/6647",
      "id": 51285499,
      "number": 6647,
      "title": "x/tools/cmd/godoc: display type kind of each named type",
      "user": {
        "login": "btracey",
        "id": 3680859,
        "avatar_url": "https://avatars.githubusercontent.com/u/3680859?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/btracey",
        "html_url": "https://github.com/btracey",
        "followers_url": "https://api.github.com/users/btracey/followers",
        "following_url": "https://api.github.com/users/btracey/following{/other_user}",
        "gists_url": "https://api.github.com/users/btracey/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/btracey/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/btracey/subscriptions",
        "organizations_url": "https://api.github.com/users/btracey/orgs",
        "repos_url": "https://api.github.com/users/btracey/repos",
        "events_url": "https://api.github.com/users/btracey/events{/privacy}",
        "received_events_url": "https://api.github.com/users/btracey/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [

      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [

      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/6",
        "html_url": "https://github.com/golang/go/milestone/6",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/6/labels",
        "id": 1055141,
        "number": 6,
        "title": "Unplanned",
        "description": "No plan to fix in any specific release.\r\n",
        "creator": {
          "login": "rsc",
          "id": 104030,
          "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rsc",
          "html_url": "https://github.com/rsc",
          "followers_url": "https://api.github.com/users/rsc/followers",
          "following_url": "https://api.github.com/users/rsc/following{/other_user}",
          "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
          "organizations_url": "https://api.github.com/users/rsc/orgs",
          "repos_url": "https://api.github.com/users/rsc/repos",
          "events_url": "https://api.github.com/users/rsc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rsc/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 1199,
        "closed_issues": 620,
        "state": "open",
        "created_at": "2015-04-06T20:47:19Z",
        "updated_at": "2017-01-08T16:18:58Z",
        "due_on": "2099-12-31T08:00:00Z",
        "closed_at": null
      },
      "comments": 4,
      "created_at": "2013-10-23T17:19:48Z",
      "updated_at": "2015-04-14T19:39:48Z",
      "closed_at": null,
      "body": "<pre>Currently godoc does not list the base type of type, for example:\n\n<a href=\"http://golang.org/pkg/encoding/json/#Decoder\">http://golang.org/pkg/encoding/json/#Decoder</a>\n\ntype Decoder\n    func NewDecoder(r io.Reader) *Decoder\n    func (dec *Decoder) Buffered() io.Reader\ntype Marshaler\ntype MarshalerError\n    func (e *MarshalerError) Error() string\n\n\nIt would be really nice if this were listed as:\n\ntype Decoder struct\n    func NewDecoder(r io.Reader) *Decoder\n    func (dec *Decoder) Buffered() io.Reader\ntype Marshaler interface\ntype MarshalerError struct\n    func (e *MarshalerError) Error() string\n\nIt's often hard to tell if a name represents an interface or a methodless non-interface\n(for example, here Decoder has the -er suffix typical of interfaces). Additionally, many\ntimes the use of a type is much clearer if it is easily seen that it has an int as the\nunderlying representation (or whatever).</pre>\n",
      "score": 1.9815364
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/8717",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/8717/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/8717/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/8717/events",
      "html_url": "https://github.com/golang/go/issues/8717",
      "id": 51288598,
      "number": 8717,
      "title": "cmd/compile: random performance fluctuations after unrelated changes",
      "user": {
        "login": "dvyukov",
        "id": 1095328,
        "avatar_url": "https://avatars.githubusercontent.com/u/1095328?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dvyukov",
        "html_url": "https://github.com/dvyukov",
        "followers_url": "https://api.github.com/users/dvyukov/followers",
        "following_url": "https://api.github.com/users/dvyukov/following{/other_user}",
        "gists_url": "https://api.github.com/users/dvyukov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/dvyukov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dvyukov/subscriptions",
        "organizations_url": "https://api.github.com/users/dvyukov/orgs",
        "repos_url": "https://api.github.com/users/dvyukov/repos",
        "events_url": "https://api.github.com/users/dvyukov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/dvyukov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 373399998,
          "url": "https://api.github.com/repos/golang/go/labels/NeedsFix",
          "name": "NeedsFix",
          "color": "ededed",
          "default": false
        },
        {
          "id": 150880191,
          "url": "https://api.github.com/repos/golang/go/labels/Performance",
          "name": "Performance",
          "color": "ededed",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "randall77",
        "id": 6889504,
        "avatar_url": "https://avatars.githubusercontent.com/u/6889504?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/randall77",
        "html_url": "https://github.com/randall77",
        "followers_url": "https://api.github.com/users/randall77/followers",
        "following_url": "https://api.github.com/users/randall77/following{/other_user}",
        "gists_url": "https://api.github.com/users/randall77/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/randall77/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/randall77/subscriptions",
        "organizations_url": "https://api.github.com/users/randall77/orgs",
        "repos_url": "https://api.github.com/users/randall77/repos",
        "events_url": "https://api.github.com/users/randall77/events{/privacy}",
        "received_events_url": "https://api.github.com/users/randall77/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "randall77",
          "id": 6889504,
          "avatar_url": "https://avatars.githubusercontent.com/u/6889504?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/randall77",
          "html_url": "https://github.com/randall77",
          "followers_url": "https://api.github.com/users/randall77/followers",
          "following_url": "https://api.github.com/users/randall77/following{/other_user}",
          "gists_url": "https://api.github.com/users/randall77/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/randall77/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/randall77/subscriptions",
          "organizations_url": "https://api.github.com/users/randall77/orgs",
          "repos_url": "https://api.github.com/users/randall77/repos",
          "events_url": "https://api.github.com/users/randall77/events{/privacy}",
          "received_events_url": "https://api.github.com/users/randall77/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/6",
        "html_url": "https://github.com/golang/go/milestone/6",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/6/labels",
        "id": 1055141,
        "number": 6,
        "title": "Unplanned",
        "description": "No plan to fix in any specific release.\r\n",
        "creator": {
          "login": "rsc",
          "id": 104030,
          "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rsc",
          "html_url": "https://github.com/rsc",
          "followers_url": "https://api.github.com/users/rsc/followers",
          "following_url": "https://api.github.com/users/rsc/following{/other_user}",
          "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
          "organizations_url": "https://api.github.com/users/rsc/orgs",
          "repos_url": "https://api.github.com/users/rsc/repos",
          "events_url": "https://api.github.com/users/rsc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rsc/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 1199,
        "closed_issues": 620,
        "state": "open",
        "created_at": "2015-04-06T20:47:19Z",
        "updated_at": "2017-01-08T16:18:58Z",
        "due_on": "2099-12-31T08:00:00Z",
        "closed_at": null
      },
      "comments": 6,
      "created_at": "2014-09-12T21:56:36Z",
      "updated_at": "2016-10-21T04:35:18Z",
      "closed_at": null,
      "body": "<pre>We see constant performance fluctuations after unrelated changes on the perf dashboard.\nFor example:\n<a href=\"http://build.golang.org/perfdetail?commit=96c713ab6c6f2a4b2a8a0bb2e8d674637b6ce596&amp\">http://build.golang.org/perfdetail?commit=96c713ab6c6f2a4b2a8a0bb2e8d674637b6ce596&amp</a>;commit0=fee5fcd5f87e75235d93fb297123feb15a59ae38&amp;builder=linux-amd64-perf&amp;benchmark=json\n<a href=\"http://build.golang.org/perfdetail?commit=455042166f1366b147e1249b8d5639be7d67bfce&amp\">http://build.golang.org/perfdetail?commit=455042166f1366b147e1249b8d5639be7d67bfce&amp</a>;commit0=0a5fafdd2343b083457d0baf6487dfce0f01e25f&amp;builder=windows-amd64-perf&amp;benchmark=json\n<a href=\"http://build.golang.org/perfdetail?commit=ad5d9f8f9be743e72f89d85d8bd6348807bdac90&amp\">http://build.golang.org/perfdetail?commit=ad5d9f8f9be743e72f89d85d8bd6348807bdac90&amp</a>;commit0=fc588981a45afa430a2d2cd29d234403cb86e1bd&amp;builder=windows-amd64-perf&amp;benchmark=json\n\nI can reproduce it locally as well. I've took 2 consecutive commits:\nchangeset:   21142:91110f70916a\nsummary:     runtime: allow crash from gsignal stack\nchangeset:   21141:0768bb1fd027\nsummary:     net: fix inconsistent behavior across platforms in SetKeepAlivePeriod\n\nand run go.benchmarks binary as:\n./bench -bench=json -benchtime=3s -benchnum=100\nalternating old and new binaries.\n\nThe results are:\nGOPERF-METRIC:time=91998310\nGOPERF-METRIC:time=91863644\nGOPERF-METRIC:time=91491272\nGOPERF-METRIC:time=91988322\n\nnew:\nGOPERF-METRIC:time=93191495\nGOPERF-METRIC:time=93222905\nGOPERF-METRIC:time=93224972\nGOPERF-METRIC:time=93140395\n\nThe difference is now that big (probably because my processors panilizes less what is\nbeing penalized), but clearly observable.\n\nIt looks like code alignment issue. Probably loops are not 16-byte aligned or something\nlike this.\n\nI guess this also penalizes user binaries in the same random and unpredictable way.</pre>\n",
      "score": 0.7994581
    },
    {
      "url": "https://api.github.com/repos/golang/go/issues/17244",
      "repository_url": "https://api.github.com/repos/golang/go",
      "labels_url": "https://api.github.com/repos/golang/go/issues/17244/labels{/name}",
      "comments_url": "https://api.github.com/repos/golang/go/issues/17244/comments",
      "events_url": "https://api.github.com/repos/golang/go/issues/17244/events",
      "html_url": "https://github.com/golang/go/issues/17244",
      "id": 179371715,
      "number": 17244,
      "title": "proposal: decide policy for sub-repositories",
      "user": {
        "login": "adg",
        "id": 8446613,
        "avatar_url": "https://avatars.githubusercontent.com/u/8446613?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adg",
        "html_url": "https://github.com/adg",
        "followers_url": "https://api.github.com/users/adg/followers",
        "following_url": "https://api.github.com/users/adg/following{/other_user}",
        "gists_url": "https://api.github.com/users/adg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adg/subscriptions",
        "organizations_url": "https://api.github.com/users/adg/orgs",
        "repos_url": "https://api.github.com/users/adg/repos",
        "events_url": "https://api.github.com/users/adg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adg/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 236419512,
          "url": "https://api.github.com/repos/golang/go/labels/Proposal",
          "name": "Proposal",
          "color": "ededed",
          "default": false
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "adg",
        "id": 8446613,
        "avatar_url": "https://avatars.githubusercontent.com/u/8446613?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/adg",
        "html_url": "https://github.com/adg",
        "followers_url": "https://api.github.com/users/adg/followers",
        "following_url": "https://api.github.com/users/adg/following{/other_user}",
        "gists_url": "https://api.github.com/users/adg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/adg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/adg/subscriptions",
        "organizations_url": "https://api.github.com/users/adg/orgs",
        "repos_url": "https://api.github.com/users/adg/repos",
        "events_url": "https://api.github.com/users/adg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/adg/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "adg",
          "id": 8446613,
          "avatar_url": "https://avatars.githubusercontent.com/u/8446613?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/adg",
          "html_url": "https://github.com/adg",
          "followers_url": "https://api.github.com/users/adg/followers",
          "following_url": "https://api.github.com/users/adg/following{/other_user}",
          "gists_url": "https://api.github.com/users/adg/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/adg/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/adg/subscriptions",
          "organizations_url": "https://api.github.com/users/adg/orgs",
          "repos_url": "https://api.github.com/users/adg/repos",
          "events_url": "https://api.github.com/users/adg/events{/privacy}",
          "received_events_url": "https://api.github.com/users/adg/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/golang/go/milestones/30",
        "html_url": "https://github.com/golang/go/milestone/30",
        "labels_url": "https://api.github.com/repos/golang/go/milestones/30/labels",
        "id": 1373555,
        "number": 30,
        "title": "Proposal",
        "description": "Proposals that are pending (not yet accepted/rejected).\r\n",
        "creator": {
          "login": "rsc",
          "id": 104030,
          "avatar_url": "https://avatars.githubusercontent.com/u/104030?v=3",
          "gravatar_id": "",
          "url": "https://api.github.com/users/rsc",
          "html_url": "https://github.com/rsc",
          "followers_url": "https://api.github.com/users/rsc/followers",
          "following_url": "https://api.github.com/users/rsc/following{/other_user}",
          "gists_url": "https://api.github.com/users/rsc/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/rsc/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/rsc/subscriptions",
          "organizations_url": "https://api.github.com/users/rsc/orgs",
          "repos_url": "https://api.github.com/users/rsc/repos",
          "events_url": "https://api.github.com/users/rsc/events{/privacy}",
          "received_events_url": "https://api.github.com/users/rsc/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 39,
        "closed_issues": 100,
        "state": "open",
        "created_at": "2015-10-24T01:40:49Z",
        "updated_at": "2017-01-05T08:59:35Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 78,
      "created_at": "2016-09-27T00:41:32Z",
      "updated_at": "2017-01-04T18:53:15Z",
      "closed_at": null,
      "body": "[this is not a proposal yet, just a problem statement]\n\nThere are several proposals to add new packages to the `x/foo` \"sub-repositories\". (See: #16353, #13432, #12332, #16257, #15985, #15406, and more.) The proposals are all different, but they circle around the same issue: what should and should not be in a sub-repository.\n\nCurrently, the sub-repositories contain x different things:\n1. Packages and tools that are part of a loose set of Go tools (godoc, goimports, benchcmp, x/debug, etc)\n2. Packages and tools that support the Go web services (godoc, present, x/playground, x/tour, etc)\n3. Tools that support Go project development (x/build, x/benchmarks, x/review, etc).\n4. Packages that augment the standard library (x/text, x/image, x/crypto, x/sys, etc).\n5. Other projects worked on by Go team members at Google (x/exp, x/mobile, etc).\n\nTo me, it's clear that 1-2 belong in the sub-repositories, and should be an official part of the Go project.\n\nFor 4-5, this code only lives in the sub-repositories either for historical reasons or mere convenience. The Go contributors are accustomed to the process (tools and reviews) of writing code in that style, so the sub-repos were just the obvious place to go.\n\n(3 is a fringe case, as the tools could be worked on elsewhere, but the people working on them work on Go full time and work on that code solely to support the project, so I am inclined to ignore this code for the purposes of this issue.)\n\nAs the project grows, it attracts people who want to contribute new packages to these sub-repositories (see the issues cited at the beginning of this issue). The reasons for inclusion include:\n1. To provide an official package for doing X.\n2. To provide a supported package for doing X.\n3. To contribute to the Go project.\n4. To use the project's development processes (gerrit, etc).\n5. To have their code reviewed by other Go contributors and to benefit from their expertise.\n6. To use the same consistent license (with CLA) that the project uses.\n7. To provide a single package for a single purpose, and avoid duplicate effort.\n8. To provide an official package for interoperating about (but not necessarily doing) X.\n9. To act as a dependency for something else under x/.\n\n[What are the other reasons? I'd like to enumerate them all here.]\n\n---\n\nMy opinion begins here:\n\nNone of the above reasons are good arguments to add new packages to the sub-repositories. Taking each in turn:\n1. The \"official\" packages, such as they are, are generally of high quality because a small group of dedicated contributors have invested constant energy in them. But there are other high quality packages elsewhere in the Go ecosystem (many of higher quality than some of those in the sub-repos), it's just harder for people to find them and they don't have \"prestigious\" import paths. Rather than moving more stuff into the Go project, _I'd think we should address this issue by making it easier to find and recognize high quality packages._ (One way to do this is to improve godoc.org, but there are many other ways.)\n2. Putting something in the sub-repositories does not imply support. People are not more or less inclined to work on a package just because it's in a sub-repository. The current set of Go contributors are stretched pretty thin as it is. I think that _by moving more stuff into the sub-repositories we set expectations of support where there is none._ That's bad for our users.\n3. Moving more code into the project just for the sake of contributing is _not a net win_. There's plenty of work to be done on the code that is already part of the project (and the many, many open issues).\n4. If people want to use our processes, I think that a better approach is to _find a way to use those processes outside of the project_. That's a solution that scales much better.\n\n[see discussion below for other points]\n\nIn general, I'd like to make the Go project smaller rather than bigger. (In the same sense that we would remove stuff from the standard library, if we could.)\n\nAs I said, this is just my opinion and perspective. I have created this issue to gather feedback from other [potential] contributors.\n\nPersonal opinion ends.\n\n---\n\nWe need to set a policy for what belongs in the sub-repositories, and in doing so more clearly define the boundaries of the Go project.\n",
      "score": 0.16234203
    }
  ]
}
